---
- name: Install NanoPI Cluster
  hosts: nodes
  remote_user: dietpi
  become: yes
  gather_facts: yes
  tasks:
    - name: Disable root login by changing shell
      user:
        name: root
        shell: /usr/sbin/nologin

    - name: Update DietPi
      command: /boot/dietpi/dietpi-update

    - name: Install snapd with apt
      apt:
        name: snapd
        state: present

    - name: Ensure snapd service is running
      service:
        name: snapd
        state: started
        enabled: yes

    - name: Install MicroK8s
      command: snap install microk8s --classic
      args:
        creates: /snap/bin/microk8s

    - name: Add the current user to the microk8s group
      user:
        name: dietpi
        groups: microk8s
        append: yes

    - name: Wait for MicroK8s to be ready
      command: microk8s status --wait-ready
      environment:
        PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
      become_user: dietpi

    - name: Enable addons
      command: |
        microk8s enable dashboard
        microk8s enable dns
        microk8s enable helm
        microk8s enable ingress
        microk8s enable metallb
        microk8s enable metrics-server
        microk8s enable registry
        microk8s enable storage
        microk8s helm upgrade --install authentik authentik/authentik

      when: inventory_hostname in groups['controllers']
      environment:
        PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
      become_user: dietpi
      delegate_to: "{{ groups['controllers'][0] }}"
      run_once: true

    - name: Generate join token on master node
      ansible.builtin.shell: "microk8s add-node | grep microk8s | grep worker"
      register: join_command_output
      when: inventory_hostname in groups['controllers']
      environment:
        PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
      delegate_to: "{{ master_node_hostname }}"
      run_once: true

    - name: Join cluster
      when: not inventory_hostname in groups['controllers']
      environment:
        PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
      ansible.builtin.shell: "{{ hostvars['controllers']['join_command_output']['stdout'] }}"
      delegate_to: "{{ inventory_hostname }}"
      run_once: true
